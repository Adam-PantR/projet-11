swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /account/alltransaction:
    post:
      security:
        - Bearer: []
      tags:
        - Account
      summary: All Transaction
      description: API for Transaction
      parameters:
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: '#/definitions/Alltransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction done Successfully
          schema:
            $ref: '#/definitions/AlltransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /account/transaction:
    post:
      tags:
        - Account
      summary: Transaction
      description: API for Transaction
      parameters:
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction done Successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error    
  /account/changetransaction:
    put:
      security:
        - Bearer: []
      tags:
        - Account
      summary: Transaction Change
      description: API for Transaction
      parameters:
        - in: body
          name: body
          description: Transaction Payload
          required: true
          schema:
            $ref: '#/definitions/TransactionChange'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction done Successfully
          schema:
            $ref: '#/definitions/TransactionChangeResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
  TransactionResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            amount:
              type: integer
            date:
              type: integer
            name: 
              type: string
  Alltransaction:
    type: object
    properties:
      token:
        type: string
        format: string
        example: string
  AlltransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: integer
          amount:
            type: integer
  TransactionChange:
    type: object
    properties:
      date:
        type: integer
      name:
        type: string
  TransactionChangeResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: integer
          amount:
            type: integer
          date:
            type: integer
          name:
            type: string
    xml:
      name: transaction